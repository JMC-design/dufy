(in-package :dufy)

;; CIE76
(defun deltae (l1 a1 b1 l2 a2 b2)
  (let ((deltal (- l1 l2))
	(deltaa (- a1 a2))
	(deltab (- b1 b2)))
    (sqrt (+ (* deltal deltal)
	     (* deltaa deltaa)
	     (* deltab deltab)))))

(defun xyz-deltae (x1 y1 z1 x2 y2 z2 &optional (illuminant illum-d65))
  (destructuring-bind (l1 a1 b1) (xyz-to-lab x1 y1 z1 illuminant)
    (destructuring-bind (l2 a2 b2) (xyz-to-lab x2 y2 z2 illuminant)
      (deltae l1 a1 b1 l2 a2 b2))))

(defun rgb255-deltae (r1 g1 b1 r2 g2 b2 &optional (rgbspace srgbd65))
  (destructuring-bind (x1 y1 z1) (rgb255-to-xyz r1 g1 b1 rgbspace)
    (destructuring-bind (x2 y2 z2) (rgb255-to-xyz r2 g2 b2 rgbspace)
      (xyz-deltae x1 y1 z1 x2 y2 z2 (rgbspace-illuminant rgbspace)))))

(defun deltae94 (l1 a1 b1 l2 a2 b2 &optional (application :graphic-arts))
  (let ((c1 (second (lab-to-lchab l1 a1 b1)))
	(c2 (second (lab-to-lchab l2 a2 b2))))
    (let* ((delta-l (- l1 l2))
	   (delta-c (- c1 c2))
	   (delta-a (- a1 a2))
	   (delta-b (- b1 b2))
	   (delta-h (sqrt (+ (* delta-a delta-a)
			     (* delta-b delta-b)
			     (- (* delta-c delta-c))))))
      (let ((kL 1d0)
	    (k1 0.045d0)
	    (k2 0.015d0))
	(unless (eq application :graphic-arts)
	  (setf kL 2d0
		k1 0.048d0
		k2 0.014d0))
	  (let ((sc (+ 1d0 (* k1 c1)))
		(sh (+ 1d0 (* k2 c1))))
	    (let ((term1 (/ delta-l kL))
		  (term2 (/ delta-c sc))
		  (term3 (/ delta-h sh)))
	      (sqrt (+ (* term1 term1)
		       (* term2 term2)
		       (* term3 term3)))))))))

(defun xyz-deltae94 (x1 y1 z1 x2 y2 z2 &key (illuminant illum-d65) (application :graphic-arts))
  (destructuring-bind (l1 a1 b1) (xyz-to-lab x1 y1 z1 illuminant)
    (destructuring-bind (l2 a2 b2) (xyz-to-lab x2 y2 z2 illuminant)
      (deltae94 l1 a1 b1 l2 a2 b2 application))))

(defun rgb255-deltae94 (r1 g1 b1 r2 g2 b2 &key (rgbspace srgbd65) (application :graphic-arts))
  (destructuring-bind (x1 y1 z1) (rgb255-to-xyz r1 g1 b1 rgbspace)
    (destructuring-bind (x2 y2 z2) (rgb255-to-xyz r2 g2 b2 rgbspace)
      (xyz-deltae94 x1 y1 z1 x2 y2 z2
		    :illuminant (rgbspace-illuminant rgbspace)
		    :application application))))
